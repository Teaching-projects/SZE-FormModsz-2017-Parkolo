<?xml version="1.0" encoding="utf-8"?><!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'><nta><declaration>const int MAXCar    = 5; //Autók száma
const int barSt	    = 0; //első sorompó indexe
const int barNd     = 1; //második sorompó indexe

typedef int[0, MAXCar-1] carType; //Autó tipus
typedef int[barSt, barNd] barrierType; //Sorompó tipus

bool brStateType[barNd + 1]; //Sorompó nyitott/zárt állapot jelzésére szolgáló tömb
bool clk; //Órajel
bool lockIn; //Igaz ha a kártyanyomtató használatban van
bool lockOut; //Igaz ha a kártyaolvasó használatban van

//Csatorna definíciók
//carIn az indexnek megfelelő autó elindulhat a bejárathoz
//carOut az indexnek megfelelő autó elindulhat a kijárathoz
//pushCardPrint parkolókártya nyomtatás indítása
//cardPrinted parkolókártya nyomtatás sikeres
//cardPrintError parkolókártya nyomtatása sikertelen
//startCardRead paroklókártya behelyezése a kártyaolvasóba
//cardIsOk parkolókártya ellenőrzés sikeres
//cardError parkolókártya ellenőrzés sikertelen
chan carIn[MAXCar],carOut[MAXCar],pushCardPrint,startCardRead, cardIsOk, cardError, cardPrinted, cardPrintError;

//openBarrier az indexnek megfelelő sorompó felnyitása
//closeBarrier az indexnek megfelel sorompó lezárása
chan openBarrier[barNd + 1],closeBarrier[barNd + 1]; 

urgent chan goCar[barNd + 1]; //Azonnal áthaladhat a várakozó autó az indexnek megfelelő sorompó alatt










</declaration><template><name>BARRIER</name><parameter>const barrierType id</parameter><location id="id0" x="128" y="-176"><name x="152" y="-184">WAIT</name></location><location id="id1" x="128" y="-272"><name x="144" y="-288">OPENED</name></location><location id="id2" x="-352" y="-224"><name x="-432" y="-240">CLOSED</name></location><init ref="id2"/><transition><source ref="id1"/><target ref="id0"/><label kind="synchronisation" x="152" y="-240">goCar[id]!</label></transition><transition><source ref="id0"/><target ref="id2"/><label kind="synchronisation" x="-176" y="-128">closeBarrier[id]?</label><label kind="assignment" x="-192" y="-112">brStateType[id] = false</label><nail x="128" y="-144"/><nail x="-352" y="-144"/></transition><transition><source ref="id2"/><target ref="id1"/><label kind="guard" x="-208" y="-384">brStateType[id] == false</label><label kind="synchronisation" x="-192" y="-368">openBarrier[id]?</label><label kind="assignment" x="-208" y="-352">brStateType[id] = true</label><nail x="-352" y="-304"/><nail x="128" y="-304"/></transition></template><template><name>CARDREADER</name><location id="id3" x="-40" y="-312"><name x="-16" y="-320">PAY</name></location><location id="id4" x="-416" y="-312"><name x="-496" y="-328">WAITING</name></location><location id="id5" x="-128" y="-312"><name x="-232" y="-344">CHECKCARD</name></location><init ref="id4"/><transition><source ref="id3"/><target ref="id4"/><label kind="synchronisation" x="-320" y="-480">cardIsOk!</label><nail x="-40" y="-456"/><nail x="-456" y="-456"/><nail x="-456" y="-352"/></transition><transition><source ref="id3"/><target ref="id4"/><label kind="synchronisation" x="-304" y="-208">cardError!</label><nail x="-40" y="-184"/><nail x="-448" y="-184"/><nail x="-448" y="-304"/></transition><transition><source ref="id5"/><target ref="id3"/></transition><transition><source ref="id5"/><target ref="id4"/><label kind="synchronisation" x="-320" y="-432">cardIsOk!</label><nail x="-128" y="-400"/><nail x="-416" y="-400"/></transition><transition><source ref="id4"/><target ref="id5"/><label kind="synchronisation" x="-328" y="-304">startCardRead?</label><nail x="-320" y="-312"/><nail x="-160" y="-312"/></transition><transition><source ref="id5"/><target ref="id4"/><label kind="synchronisation" x="-312" y="-256">cardError!</label><nail x="-128" y="-232"/><nail x="-416" y="-232"/></transition></template><template><name>CAR</name><parameter>const carType id</parameter><declaration>barrierType carBar; // Annak a sorompónak az azonosítója amelyiken áthalad
bool outSide=true; // Ha értéke true akkor az autó befelé ha false akkor kifelé halad
</declaration><location id="id6" x="240" y="-272"><name x="200" y="-304">BAROPENED</name></location><location id="id7" x="-352" y="-400"><name x="-400" y="-384">PRINTCARD</name></location><location id="id8" x="-544" y="-400"><name x="-576" y="-384">PUSHPRINT</name></location><location id="id9" x="-936" y="-272"><name x="-1024" y="-280">WAITING</name></location><location id="id10" x="-56" y="-272"><name x="-168" y="-304">BEFOREBAR</name></location><location id="id11" x="256" y="-80"><name x="288" y="-88">PASSED</name><committed/></location><location id="id12" x="-352" y="-272"><name x="-400" y="-304">CHECKCARD</name></location><location id="id13" x="-528" y="-272"><name x="-560" y="-304">CARDIN</name></location><init ref="id9"/><transition><source ref="id10"/><target ref="id10"/><label kind="guard" x="48" y="-368">brStateType[barSt] &amp;&amp; brStateType[barNd]</label><label kind="assignment" x="48" y="-352">carBar=brStateType[barSt]?barNd:barSt</label><nail x="48" y="-328"/><nail x="-32" y="-368"/></transition><transition><source ref="id10"/><target ref="id6"/><label kind="guard" x="-40" y="-232">!brStateType[barSt] || !brStateType[barNd]</label><label kind="synchronisation" x="16" y="-256">openBarrier[carBar]!</label></transition><transition><source ref="id7"/><target ref="id8"/><label kind="synchronisation" x="-480" y="-528">cardPrintError?</label><nail x="-352" y="-496"/><nail x="-544" y="-496"/></transition><transition><source ref="id7"/><target ref="id10"/><label kind="synchronisation" x="-216" y="-440">cardPrinted?</label><label kind="assignment" x="-328" y="-424">carBar=brStateType[barSt]?barNd:barSt,lockIn = false</label><nail x="-184" y="-400"/></transition><transition><source ref="id8"/><target ref="id7"/><label kind="synchronisation" x="-496" y="-432">pushCardPrint!</label></transition><transition><source ref="id9"/><target ref="id8"/><label kind="guard" x="-856" y="-448">clk==true &amp;&amp; outSide == true &amp;&amp; lockIn == false</label><label kind="assignment" x="-760" y="-424">lockIn = true</label><nail x="-872" y="-400"/></transition><transition><source ref="id11"/><target ref="id9"/><label kind="synchronisation" x="-440" y="-48">closeBarrier[carBar]!</label><label kind="assignment" x="-432" y="-72">outSide = !outSide</label><nail x="64" y="-80"/><nail x="-56" y="-80"/><nail x="-848" y="-80"/></transition><transition><source ref="id9"/><target ref="id13"/><label kind="guard" x="-864" y="-272">clk==true &amp;&amp; outSide == false &amp;&amp; lockOut == false</label><label kind="assignment" x="-760" y="-248">lockOut = true</label></transition><transition><source ref="id6"/><target ref="id11"/><label kind="synchronisation" x="264" y="-216">goCar[carBar]?</label><nail x="248" y="-200"/></transition><transition><source ref="id12"/><target ref="id10"/><label kind="synchronisation" x="-312" y="-264">cardIsOk?</label><label kind="assignment" x="-336" y="-240">carBar=brStateType[barSt]?barNd:barSt, 
lockOut = false</label></transition><transition><source ref="id12"/><target ref="id13"/><label kind="synchronisation" x="-480" y="-160">cardError?</label><nail x="-352" y="-160"/><nail x="-528" y="-160"/></transition><transition><source ref="id13"/><target ref="id12"/><label kind="synchronisation" x="-496" y="-272">startCardRead!</label></transition></template><template><name>CARDPRINTER</name><location id="id14" x="-208" y="-144"><name x="-184" y="-160">PRINTCARD</name></location><location id="id15" x="-432" y="-144"><name x="-528" y="-160">WAITING</name></location><init ref="id15"/><transition><source ref="id14"/><target ref="id15"/><label kind="synchronisation" x="-360" y="-296">cardPrinted!</label><nail x="-208" y="-272"/><nail x="-432" y="-272"/></transition><transition><source ref="id14"/><target ref="id15"/><label kind="synchronisation" x="-352" y="-32">cardPrintError!</label><nail x="-208" y="-32"/><nail x="-432" y="-32"/></transition><transition><source ref="id15"/><target ref="id14"/><label kind="synchronisation" x="-368" y="-144">pushCardPrint?</label></transition></template><template><name>GATEWAY</name><declaration>clock Gclock; //számláló

/// Rendszer inicializálás
void initSystem()
{
	brStateType[0] = false;
	brStateType[1] = false;
	lockIn = false;
	lockOut = false;
}


</declaration><location id="id16" x="-104" y="-120"></location><location id="id17" x="-320" y="-120"></location><location id="id18" x="-476" y="-120"></location><init ref="id18"/><transition><source ref="id18"/><target ref="id17"/><label kind="assignment" x="-432" y="-112">initSystem()</label></transition><transition><source ref="id16"/><target ref="id17"/><label kind="guard" x="-264" y="-240">Gclock&gt;=300</label><label kind="assignment" x="-280" y="-216">clk=false, Gclock=0</label><nail x="-104" y="-192"/><nail x="-320" y="-192"/></transition><transition><source ref="id17"/><target ref="id16"/><label kind="guard" x="-256" y="-48">Gclock &gt;= 150</label><label kind="assignment" x="-232" y="-24">clk=true</label><nail x="-320" y="-56"/><nail x="-176" y="-56"/><nail x="-104" y="-56"/></transition></template><system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system GATEWAY,CARDPRINTER, CARDREADER, BARRIER, CAR;

</system></nta>